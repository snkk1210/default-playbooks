---
- name: permissive selinux
  selinux:
    state: permissive
    policy: targeted

- name: disable firewalld
  systemd:
    name: firewalld
    state: stopped
    enabled: no
  ignore_errors: yes

- name: change hostname
  hostname: name="{{ inventory_hostname }}"

- name: set kernel parameters to sysctl.conf
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - { name: 'net.ipv6.conf.all.disable_ipv6',value: '1' }
    - { name: 'net.ipv6.conf.default.disable_ipv6',value: '1' }

- name: deploy containerd.conf file for kernel modules
  template:
    src: ../templates/containerd.conf
    dest: /etc/modules-load.d/containerd.conf
    owner: root
    group: root
    mode: 0644

- name: modprobe overlay
  community.general.modprobe:
    name: overlay

- name: modprobe br_netfilter
  community.general.modprobe:
    name: br_netfilter

- name: deploy k8s.conf file
  template:
    src: ../templates/k8s.conf
    dest: /etc/sysctl.d/k8s.conf
    owner: root
    group: root
    mode: 0644

- name: sysctl --system
  shell: sysctl --system

- name: add docker repository
  shell: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

- name: install docker package
  dnf:
    name:
      - containerd.io
      - iproute-tc

- name: containerd config default | tee /etc/containerd/config.toml >/dev/null 2>&1
  shell: containerd config default | tee /etc/containerd/config.toml >/dev/null 2>&1

- name: sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/' /etc/containerd/config.toml
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup = false'
    line: '            SystemdCgroup = true'
    backup: yes

- name: start containerd
  systemd:
    name: containerd
    state: restarted
    enabled: yes

- name: deploy kubernetes.repo file
  template:
    src: ../templates/kubernetes.repo
    dest: /etc/yum.repos.d/kubernetes.repo
    owner: root
    group: root
    mode: 0644

- name: install kube package
  dnf:
    name:
      - kubelet
      - kubeadm
      - kubectl
    disable_excludes: kubernetes

- name: start kubelet
  systemd:
    name: kubelet
    state: started
    daemon_reload: yes
    enabled: yes

- name: restart server
  shell: sleep 2 && shutdown -r now
  async: 1
  poll: 0
  become: true
  ignore_errors: true

- name: waiting for server
  local_action: wait_for host={{ inventory_hostname }} state=started delay=10 timeout=60
  become: false